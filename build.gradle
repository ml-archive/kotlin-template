// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    ext.versions = [
            kotlin            : '1.4.10',
            appcompat         : '1.2.0',
            coroutines        : '1.3.9',
            constraint_layout : '2.0.1',
            dagger            : '2.29.1',
            lifecycle         : '2.2.0',
            timber            : "4.7.1",
            junit             : '4.13.1',
            espresso          : '3.3.0',
            mockito           : '3.3.3',
            nstack            : '3.2.5',
            nodes_arch        : '2.3.5',
            retrofit          : '2.9.0',
            okhttp            : '4.9.0',
            ktx               : '1.3.2',
            material          : '1.2.1',
            archCore          : '2.1.0',
            navigation        : '2.3.0',
            nodes_utils       : '1.0.0',
            nodes_utils_okhttp: '0.12.2',
            preferences       : '1.1.1',
            chucker           : '3.3.0',
            leak_canary       : '2.5',
            desugaring        : '1.0.9'
    ]

    ext {
        kotlin_version = '1.4.10'
    }

    ext.keys = [
            appId       : 'bOdrNuZd4syxuAz6gyCb3xwBCjA8U4h4IcQI',
            apiKey      : 'X0ENl5QpKI51tS9CzKSt1PGwfZeq2gBMTU58',
            acceptHeader: "da-DK"
    ]

    ext.sdks = [
            compileSdkVersion: 29,
            buildToolsVersion: '29.0.2',
            minSdkVersion    : 23,
            targetSdkVersion : 29
    ]

    repositories {
        mavenCentral()
        google()
        jcenter()
        mavenLocal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "dk.nodes.nstack:translation:${versions.nstack}"
        classpath "com.github.gfx.ribbonizer:ribbonizer-plugin:2.1.0"
    }
}

plugins {
    id "com.diffplug.spotless" version "5.6.1"
    id 'com.github.ben-manes.versions' version "0.33.0"
}

allprojects {
    repositories {
        mavenCentral()
        maven { url 'https://maven.google.com' }
        jcenter()
        mavenLocal()
        google()
    }
}


subprojects {
    apply plugin: 'com.diffplug.spotless'
    spotless {
        format 'misc', {
            target '**/*.gradle'
            trimTrailingWhitespace()
            indentWithSpaces(4) // or spaces. Takes an integer argument if you don't like 4
            endWithNewline()
        }
        kotlin {
            target "**/*.kt"
            ktlint('0.33.0')
            targetExclude("**/RateReminderActions.kt")
        }
        java {
            target "**/*.java"
            targetExclude '**/Translation.java'
            googleJavaFormat('1.1').aosp()
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            // Treat all Kotlin warnings as errors, don't go full retarded
            // allWarningsAsErrors = true

            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi"
            freeCompilerArgs += "-Xuse-experimental=kotlinx.coroutines.FlowPreview"

            // Set JVM target to 1.8
            jvmTarget = "1.8"
        }
    }
}

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'cr', 'm', 'preview'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}